#!/usr/bin/env python2

## Emulate curl, but in python.

import requests
import os
import sys
import argparse

CA_CERT='/etc/rhsm/ca/redhat-uep.pem'
ENTITLEMENT_DIR = '/etc/pki/entitlement'

parser = argparse.ArgumentParser(description='Purl')
parser.add_argument('--timeout', '-t', type=float, required=False, help='Request timeout in seconds, fractionals permitted (default=no timeout)')
parser.add_argument('--cacert', type=str, required=False, help='CA certificate file', default='CA_CERT')
parser.add_argument('--showresponse', '-r', default=False, action='store_true', help='Display response contents (default=no)')
parser.add_argument('url', help='URL to request')
args = parser.parse_args()

def find_client_certpairs(where = ENTITLEMENT_DIR):
    dircontents = os.listdir(where)
    pemfiles = [ f.strip('.pem') for f in dircontents if f.endswith('.pem') ]
    if len(pemfiles) % 2 != 0:
        print('*** Unexpected: odd number of pemfiles in', where)
    pemkeys = [ k for k in pemfiles if k.endswith('-key') ]
    pemcerts = [ c for c in pemfiles if not c.endswith('-key') ]
    pempairs = [ (c,c+'-key') for c in pemcerts if c+'-key' in pemkeys ]
    return pempairs

URL = sys.argv[-1]

certpairs = find_client_certpairs()
multi_pairs = len(certpairs) > 1
if multi_pairs:
    print('Multiple certificate-key pairs found under %s, will try to access the URL once with each pair.'%ENTITLEMENT_DIR)

for cert,key in certpairs:
    cert = ENTITLEMENT_DIR + '/' + cert + '.pem'
    key = ENTITLEMENT_DIR + '/' + key + '.pem'
    req_args=dict()
    req_args['verify'] = CA_CERT
    req_args['cert'] = (cert,key)
    print('Trying to access the URL below with the parameters below:')
    print('   URL: %s' % URL)
    print('   CA certificate: %s' % CA_CERT)
    print('   Client certificate: %s' % cert)
    print('   Client key: %s' % key)
    if args.timeout:
        print('   Timeout: %d' % args.timeout)
        req_args['timeout'] = args.timeout
    print('\n=> Issuing the request now...')
    resp = requests.get(URL, **req_args)
    print('\n=> Response arrived in: %f' % resp.elapsed.total_seconds())
    print('\n=> Response code was...')
    print(resp.status_code)
    if args.showresponse:
        print('\n=> Response contents are...')
        try:
            print(resp.text)
        except UnicodeEncodeError:
            print(resp.text.encode('utf-8'))
        except Exception as e:
            raise e

